global ^

import "macros" as $

-- Each function should replicate math.random
const randoms =
	[$RANDOM_RNG]: (x, y) =>
		if y
			math.random x, y
		elseif x
			math.random x
		else
			math.random!
	[$RANDOM_PRNG]: (x, y) =>
		@seed = @seed ~ (@seed << 13)
		@seed = @seed ~ (@seed >> 17)
		@seed = @seed ~ (@seed << 5)

		if y
			math.floor x + ((y + 1 - x) / (math.maxinteger - 1)) * (math.abs @seed - 1)
		else if x
			math.floor 1 + (x / (math.maxinteger - 1)) * (math.abs @seed - 1)
		else
			(math.abs @seed - 1) / (math.maxinteger - 1)
	[$RANDOM_SAME]: (x, y) =>
		if y
			math.ceil math.max (math.min @seed, x), y
		elseif x
			math.ceil math.max (math.min @seed, 1), x
		else
			math.max (math.min @seed, 0), 1
--

export seed = (value) =>
	if value?
		@seed = value
	@seed

export next = (x, y) =>
	if "number" == type @next
		return randoms[@next] @, x, y
	@next x, y